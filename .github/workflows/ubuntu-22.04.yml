name: ubuntu-22.04

on: workflow_dispatch

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker-image: sprinters-images-ubuntu-22.04
            docker-platform: linux/amd64
            arm64: false
            minimal: false
            slim: false
            instance: r7i.large

          - docker-image: sprinters-images-ubuntu-22.04-arm
            docker-platform: linux/arm64
            arm64: true
            minimal: false
            slim: false
            instance: r8g.large

          - docker-image: sprinters-images-ubuntu-22.04-slim
            docker-platform: linux/amd64
            arm64: false
            minimal: false
            slim: true
            instance: r7i.large

          - docker-image: sprinters-images-ubuntu-22.04-arm-slim
            docker-platform: linux/arm64
            arm64: true
            minimal: false
            slim: true
            instance: r8g.large

          - docker-image: sprinters-images-ubuntu-22.04-minimal
            docker-platform: linux/amd64
            arm64: false
            minimal: true
            slim: false
            instance: r7i.large

          - docker-image: sprinters-images-ubuntu-22.04-arm-minimal
            docker-platform: linux/arm64
            arm64: true
            minimal: true
            slim: false
            instance: r8g.large

    runs-on: sprinters:aws:${{ matrix.instance }}:minimal:temp=512:spot=false
    env:
      DOCKERFILE_NAME: images/Dockerfile-ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from Dockerfile
        run: |
          VERSION=$(grep 'ARG RUNNER_IMAGE_VERSION=' "$DOCKERFILE_NAME" | cut -d '=' -f2)
          echo "RUNNER_IMAGE_VERSION: ${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: images
          file: ${{ env.DOCKERFILE_NAME }}
          build-args: |
            RUNNER_IMAGE_VERSION=${{ env.VERSION }}
            ARM64=${{ matrix.arm64 }}
            MINIMAL=${{ matrix.minimal }}
            SLIM=${{ matrix.slim }}
          platforms: ${{ matrix.docker-platform }}
          push: true
          tags: |
            ghcr.io/sprinters-sh/${{ matrix.docker-image }}:latest
            ghcr.io/sprinters-sh/${{ matrix.docker-image }}:${{ env.VERSION }}
