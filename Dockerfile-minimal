FROM ubuntu:24.04

ARG TARGETOS
ARG TARGETARCH
ARG RUNNER_VERSION=2.323.0

LABEL org.opencontainers.image.source=https://github.com/sprinters-sh/sprinter-image
LABEL org.opencontainers.image.description="sprinters.sh runner"
LABEL org.opencontainers.image.licenses=MIT
LABEL sh.sprinters.runner.version=$RUNNER_VERSION

ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
ENV DEBIAN_FRONTEND=noninteractive
ENV RUNNER_MANUALLY_TRAP_SIG=1
ENV ACTIONS_RUNNER_PRINT_LOG_TO_STDOUT=1
ENV ImageOS=ubuntu22
ENV ACTIONS_RUNNER_HOOK_JOB_STARTED=/job-started.sh
ENV ACTIONS_RUNNER_HOOK_JOB_COMPLETED=/job-completed.sh
ENV SPRINTERS_RUNNER_WEBHOOK=https://console.sprinters.sh/runner/webhook

# Set up base environment
RUN apt-get update \
    && apt-get install -y --no-install-recommends ca-certificates git curl sudo gnupg lsb-release openssl unzip lshw \
    && touch /etc/environment

# https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
RUN install -m 0755 -d /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc \
    && chmod a+r /etc/apt/keyrings/docker.asc \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y --no-install-recommends docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null

RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash \
    && apt-get update \
    && apt-get install -y --no-install-recommends git-lfs gh

RUN adduser --disabled-password --gecos "" --uid 1001 runner \
    && usermod -aG sudo runner \
    && usermod -aG docker runner \
    && echo "%sudo   ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers \
    && echo "Defaults env_keep += \"DEBIAN_FRONTEND\"" >> /etc/sudoers

WORKDIR /home/runner

RUN export RUNNER_ARCH=${TARGETARCH} \
    && if [ "$RUNNER_ARCH" = "amd64" ]; then export RUNNER_ARCH=x64 ; fi \
    && curl -f -L -o runner.tar.gz https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-${TARGETOS}-${RUNNER_ARCH}-${RUNNER_VERSION}.tar.gz \
    && tar xzf ./runner.tar.gz \
    && rm runner.tar.gz

RUN apt-get update \
    && apt-get install -y --no-install-recommends libicu-dev \
    && ./bin/installdependencies.sh

COPY --chmod=555 entrypoint.sh /entrypoint.sh
COPY --chmod=555 start-docker.sh /start-docker.sh
COPY --chmod=555 job-started.sh /job-started.sh
COPY --chmod=555 job-completed.sh /job-completed.sh
COPY --chmod=555 publish-event.sh /publish-event.sh

USER runner

# Quick sanity check ensuring the runner is fully functional
RUN ./config.sh --version

CMD ["/entrypoint.sh"]
